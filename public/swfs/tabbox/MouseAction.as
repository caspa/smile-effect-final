class MouseAction {	public static var lib:Array=new Array();	var onmouseover:Action;	var onmouseout:Action;	var onmousedown:Action;	var onmouseup:Action;	function MouseAction(over:Action, out:Action, down:Action, up:Action) {		this.onmouseover = over;		this.onmouseout = out;		this.onmousedown = down;		this.onmouseup = up;	}	public static function define(name:String, over:Action, out:Action, down:Action, up:Action) {		MouseAction.lib[name]=new MouseAction(over, out, down, up);	}	function clone(){		var mouseaction=new MouseAction(this.onmouseover.clone(),this.onmouseout.clone(),this.onmousedown.clone(),this.onmouseup.clone())		return mouseaction;	}	function set_args(over, out, down, up) {		if (over) {			this.onmouseover.set_args(over.split(","));		}		if (out) {			this.onmouseout.set_args(out.split(","));		}		if (down) {			this.onmousedown.set_args(down.split(","));		}		if (up) {			this.onmouseup.set_args(up.split(","));		}	}}